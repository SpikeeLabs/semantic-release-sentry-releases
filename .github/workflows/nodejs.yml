name: Node.js CI

on:
  pull_request:

jobs:
  test:
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18']
    name: Node ${{ matrix.node }} testing
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci
      - name: eslint
        run: npm run lint:check
      - name: eslint
        run: npm run format:check
      - name: ts-compile-check
        run: npm run ts-compile-check
      - name: test
        run: npm test
        env:
          CI: true

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: '18'
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci
      - name: test
        run: |
          npm test
          npx nyc check-coverage
          npx nyc report --reporter=lcov
        env:
          CI: true
      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     verbose: true
      #     files: coverage/lcov.info
      #     name: codecov-umbrella
      #     fail_ci_if_error: true
